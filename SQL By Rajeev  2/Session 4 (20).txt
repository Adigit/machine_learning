use test;

select getdate();

SELECT GETDATE(), DATEADD(D,90, GETDATE()), DATEADD(M,9,GETDATE()), DATEADD(YY, 2, GETDATE());

SELECT EID, NAME, DOJ , DATEDIFF(YY,DOJ, GETDATE())AS 'TENURE'
FROM EMP;

SELECT GETDATE(), DAY(GETDATE()) AS 'DAY', MONTH(GETDATE()) AS 'MTH', YEAR(GETDATE()) AS 'YER';

SELECT GETDATE(), DATEPART(D,GETDATE())AS 'DAY', DATEPART(M,GETDATE()) AS 'MTH', DATEPART(YY, GETDATE()) AS'YER';

SELECT GETDATE(), CONVERT(VARCHAR(20), GETDATE()), CONVERT(VARCHAR(20), GETDATE(), 13);

SELECT GETDATE(), FORMAT(GETDATE(), 'D'), FORMAT(GETDATE(),'M'), FORMAT(GETDATE(), 'Y');

SELECT EID, NAME, DOJ
FROM EMP
WHERE YEAR(DOJ)=2021;

SELECT EID, NAME, DOJ, DATEADD(D,90,DOJ)AS 'CONFIRMATION DATE'
FROM EMP
WHERE YEAR(DOJ)=2021;

SELECT EID, NAME, DOB
FROM EMP
WHERE MONTH(DOB)= 6;

SELECT YEAR(DOJ)AS'JOINING YEAR', COUNT(EID)AS 'JOININGS'
FROM EMP
GROUP BY YEAR(DOJ)
ORDER BY COUNT(EID) DESC;

USE LEARN39;

CREATE FUNCTION MYSUM(@X AS INT, @Y AS INT)
RETURNS INT
AS
BEGIN
	DECLARE @Z AS INT;
	SET @Z = @X + @Y;
	RETURN @Z;
END;
		
SELECT DBO.MYSUM(10,20);


CREATE FUNCTION CAL (@A AS INT, @B AS INT, @C AS CHAR(1))
RETURNS INT
AS
BEGIN 
	DECLARE @R AS INT;
	
	IF @C = '+'
		SET @R = @A + @B;
	ELSE IF @C = '-'
		SET @R = @A - @B;
	ELSE IF @C = '/'
		SET @R = @A / @B;
	ELSE IF @C = '*'
		SET @R = @A * @B;
	ELSE IF @C = '%'
		SET @R = @A % @B;
	ELSE 
		SET @R = 0;
	RETURN @R;
END;

SELECT DBO.CAL(25,4, '*');


--RAJEEV GARG E0001 - RGARG0001@OUTLOOK.COM

CREATE FUNCTION CMAIL(@N AS VARCHAR(40), @I AS CHAR(5), @D AS VARCHAR(30))
RETURNS VARCHAR(100)
AS
BEGIN
	DECLARE @L AS INT;
	DECLARE @S AS INT;
	DECLARE @LN AS VARCHAR(20);
	DECLARE @EM AS VARCHAR(100);

	SET @S = CHARINDEX(' ', @N);
	SET @L = LEN(@N);

	SET @LN= RIGHT(@N,@L-@S);

	SET @EM= UPPER(CONCAT(LEFT(@N,1), @LN, RIGHT(@I,4), '@',@D, '.COM'));

	RETURN @EM;
END;

SELECT DBO.CMAIL('RAJEEV GARG', 'E0001', 'OUTLOOK');
SELECT DBO.CMAIL('MANOJ KUMAR', 'E0123', 'LEARNBAY');

SELECT EID, NAME, DBO.CMAIL(NAME, EID,'LEARNBAY') AS 'CORPMAIL'
FROM EMP;

-- SCALAR FUNCTION \ SINGLE VALUED
-- TABLE VALUED FUNCTION

USE TEST;
	
CREATE FUNCTION L39FNSAL()
RETURNS TABLE
AS
	 RETURN(SELECT EMP.EID, NAME, CITY, DOJ, DEPT, DESI, SALARY AS 'BSIC', SALARY *.15 AS 'HRA', SALARY *.09 AS 'PF'
	 FROM EMP
	 INNER JOIN EMP_SAL
	 ON EMP.EID = EMP_SAL.EID
	 WHERE DEPT = 'HR');

DROP FUNCTION L39FNSAL;

CREATE FUNCTION L39FNSAL(@D AS VARCHAR(20))
RETURNS TABLE
AS
	 RETURN(SELECT EMP.EID, NAME, CITY, DOJ, DEPT, DESI, SALARY AS 'BSIC', SALARY *.15 AS 'HRA', SALARY *.09 AS 'PF'
	 FROM EMP
	 INNER JOIN EMP_SAL
	 ON EMP.EID = EMP_SAL.EID
	 WHERE DEPT = @D);



SELECT * FROM DBO.L39FNSAL('HR');


SELECT * FROM EMP;

SELECT* FROM EMP_SAL;


SELECT EID, NAME,CITY FROM EMP


SELECT EID FROM EMP_SAL WHERE DESI = 'MANAGER';

SELECT EID, NAME,CITY FROM EMP
WHERE EID IN (1004,1007,1008,1010,1013,1028,1067,1040,1074,1088,1123);

SELECT EID, NAME,CITY FROM EMP -- OUTER \ MAIN
WHERE EID IN (SELECT EID FROM EMP_SAL WHERE DESI = 'MANAGER'); -- INNER \ SUB

SELECT EID, DEPT, DESI, SALARY FROM EMP_SAL
WHERE EID IN (SELECT EID FROM EMP WHERE CITY = 'DELHI');

SELECT EMP.EID, NAME, DEPT, DESI
FROM EMP
INNER JOIN EMP_SAL
ON EMP.EID = EMP_SAL.EID
WHERE DEPT = 'MIS';

SELECT* FROM TRAINING;

-- INSERT SUB QUERY

INSERT INTO TRAINING (EID, NAME, DEPT)
SELECT EMP.EID, NAME, DEPT
FROM EMP
INNER JOIN EMP_SAL
ON EMP.EID = EMP_SAL.EID
WHERE DEPT = 'MIS';

UPDATE TRAINING SET MODULE = 'SQL';

SELECT * FROM TRAINING;

-- DELETE SUB-QUERY
DELETE FROM TRAINING
WHERE EID IN(SELECT EID FROM EMP_SAL WHERE DESI LIKE 'MANAGER%');

SELECT EID, DEPT, DESI, SALARY FROM EMP_SAL
WHERE EID IN (SELECT EID FROM EMP WHERE CITY = 'CHANDIGARH');

-- UPDATE SUB QUERY

UPDATE EMP_SAL SET SALARY = SALARY +5000
WHERE EID IN (SELECT EID FROM EMP WHERE CITY = 'CHANDIGARH');

SELECT EID, NAME, CITY FROM EMP
WHERE EID IN (SELECT EID FROM EMP_SAL WHERE SALARY > 300000);

SELECT EID, NAME, CITY FROM EMP
WHERE EID IN (SELECT EID FROM EMP_SAL WHERE SALARY > 300000 )
ORDER BY EID DESC;

SELECT EID, NAME, CITY FROM EMP
WHERE EID IN (SELECT EID FROM EMP_SAL WHERE SALARY > 500000);

SELECT EID, NAME, CITY FROM EMP
WHERE EID IN (SELECT EID FROM EMP_SAL WHERE SALARY BETWEEN 200000 AND 300000);

SELECT COUNT(EID) AS'NO OF EMP', AVG(SALARY ) AS 'AVG SAL' FROM EMP_SAL;

SELECT COUNT(EID) AS'NO OF DEL EMP', AVG(SALARY ) AS 'DEL AVG SAL' FROM EMP_SAL
WHERE EID IN (SELECT EID FROM EMP WHERE CITY = 'DELHI');

SELECT COUNT(EID) AS'NO OF DEL EMP > 300K', AVG(SALARY ) AS 'DEL AVG SAL' FROM EMP_SAL -- A
WHERE EID IN (SELECT EID FROM EMP WHERE CITY = 'DELHI' -- B
			AND EID IN(SELECT EID FROM EMP_SAL WHERE SALARY > 300000)); -- C

-- A => B =>C A=>C

SELECT * FROM EMP_SAL WHERE DEPT = 'HR'
AND EXISTS (SELECT * FROM EMP_SAL WHERE DEPT = 'HR' AND SALARY > 300000);

CREATE PROCEDURE L39EMPD
AS
BEGIN
	SELECT * FROM EMP
	WHERE CITY= 'DELHI';
END;

DROP PROCEDURE L39EMPD;

EXECUTE L39EMPD;
EXEC L39EMPD;

L39EMPD;

CREATE PROCEDURE L39EMPD @C AS VARCHAR(30)
AS
BEGIN
	SELECT * FROM EMP
	WHERE CITY= @C;
END;

L39EMPD 'MUMBAI';

CREATE PROCEDURE L39SHOW @T AS VARCHAR(30)
AS
BEGIN
	EXEC ('SELECT * FROM ' + @T);
END;

L39SHOW 'TRAINING';